{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,cAAc;AAClB,IAAM,eAAe;AACrB,IAAM,WAAW;AAEjB,SAAS;IACL,IAAM,WAAW;QACb,aAAa;QACb,UAAU;QACV,aAAa,OAAO,QAAQ,CAAC,IAAI;QACjC,WAAW;IACf;IAEA,IAAM,yBAAyB,gBAAgB,kCAAkC,CAAC;IAClF,cAAc;AAClB;AAEA;AAEA,SAAS;IACL,IAAM,iBAAiB,SAAS,cAAc,CAAC,4BAA4B,SAAS,cAAc,CAAC;IACnG,eAAe,KAAK;AACxB;AAEA,SAAS,gBAAgB,SAAS;IAC9B,IAAM,YAAY,SAAS,cAAc,CAAC;IAE1C,IAAI,iBAAiB,EAAE;IAEvB,UAAU,OAAO,CAAC,SAAC;QACf,IAAI,QAAQ;YACR,WAAW,aAAa,CAAC,eAAe;YACxC,oBAAoB;gBAChB,kBAAkB,aAAa,CAAC,iBAAiB;gBACjD,oBAAoB,aAAa,CAAC,mBAAmB;gBACrD,aAAa,aAAa,CAAC,YAAY;gBACvC,mBAAmB,aAAa,CAAC,kBAAkB;gBACnD,kBAAkB,aAAa,CAAC,iBAAiB;gBACjD,mBAAmB,aAAa,CAAC,kBAAkB;gBACnD,mBAAmB,aAAa,CAAC,kBAAkB;gBACnD,aAAa,aAAa,CAAC,YAAY;gBACvC,aAAa,aAAa,CAAC,YAAY;gBACvC,aAAa,aAAa,CAAC,YAAY;gBACvC,gBAAgB,aAAa,CAAC,eAAe;gBAC7C,oBAAoB,aAAa,CAAC,mBAAmB;gBACrD,mBAAmB,aAAa,CAAC,kBAAkB;YACvD;YACA,eAAe,CAAC;QACpB;QAEA,IAAK,QAAQ,cAAc,SAAS,CAAC,0DAA0D,CAC3F,IAAI,CAAC,MAAM,kBAAkB,CAAC,cAAc,CAAC,OACzC,MAAM,aAAa,CAAC,KAAK,GAAG,cAAc,SAAS,CAAC,0DAA0D,CAAC,KAAK;QAI5H,IAAK,QAAQ,cAAc,SAAS,CAAC,uDAAuD,CACxF,IAAI,CAAC,MAAM,kBAAkB,CAAC,cAAc,CAAC,OACzC,MAAM,aAAa,CAAC,KAAK,GAAG,cAAc,SAAS,CAAC,uDAAuD,CAAC,KAAK;QAIzH,eAAe,IAAI,CAAC;IACxB;IAEA,IAAI,QAAQ,IAAI,YAAY,mBAAmB;IAC/C,UAAU,aAAa,CAAC;IAExB,QAAQ,GAAG,CAAC,mBAAmB;IAC/B;AACJ;AAEA,SAAS,oBAAoB,KAAK;IAC9B,QAAQ,GAAG,CAAC,kBAAkB;AAClC;SAEe;WAAA;;SAAA;IAAA,kCAAf,oBAAA;YAEU,oBAOA;;YAPA,qBAAqB;gBACvB,WAAW;gBACX,mBAAmB;gBACnB,UAAU;gBACV,UAAU;YACd;YAEM,YAAY,SAAS,cAAc,CAAC;YAE1C,gBAAgB,+BAA+B,CAAC,WAAW,oBAAoB;gBAC3E,IAAM,sBAAsB,SAAS,cAAc,CAAC;gBACpD,oBAAoB,SAAS;YACjC;;;;;IACJ;WAfe;;SAiBA;WAAA;;SAAA;IAAA,iBAAf,oBAAA;;;;oBACI,QAAQ,GAAG,CAAC,kBAAkB;oBAC9B;;wBAAM,YAAY,OAAO;;;oBAAzB;;;;;;IACJ;WAHe;;AAKf,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,IAAM,YAAY,SAAS,cAAc,CAAC;IAC1C,UAAU,gBAAgB,CAAC,mBAAmB;AAClD","sources":["web-src/src/assetselector.js"],"sourcesContent":["let imsInstance = null;\nconst repositoryId = \"author-p129970-e1316086.adobeaemcloud.com\";\nconst rootPath = \"/content/dam\";\n\nfunction registerIMSTokenService() {\n    const imsProps = {\n        imsClientId: \"p61927-polaris\",\n        imsScope: \"AdobeID,openid,read_organizations,additional_info.projectedProductContext\",\n        redirectUrl: window.location.href,\n        modalMode: true\n    };\n\n    const registeredTokenService = PureJSSelectors.registerAssetsSelectorsAuthService(imsProps);\n    imsInstance = registeredTokenService;\n};\n\nregisterIMSTokenService();\n\nfunction onClose() {\n    const selectorDialog = document.getElementById('asset-selector-dialog') || document.getElementById('destination-selector-dialog');\n    selectorDialog.close();\n}\n\nfunction handleSelection(selection) {\n    const container = document.getElementById('asset-selector');\n\n    let assetSelection = [];\n\n    selection.forEach((selectedAsset) => {\n        let asset = {\n            'assetId': selectedAsset['repo:assetId'],\n            repositoryMetadata: {\n                \"aem:assetState\": selectedAsset['aem:assetState'],\n                \"aem:checkedOutBy\": selectedAsset['aem:checkedOutBy'],\n                \"dc:format\": selectedAsset['dc:format'],\n                \"repo:createDate\": selectedAsset['repo:createDate'],\n                \"repo:createdBy\": selectedAsset['repo:createdBy'],\n                \"repo:modifiedBy\": selectedAsset['repo:modifiedBy'],\n                \"repo:modifyDate\": selectedAsset['repo:modifyDate'],\n                \"repo:name\": selectedAsset['repo:name'],\n                \"repo:path\": selectedAsset['repo:path'],\n                \"repo:size\": selectedAsset['repo:size'],\n                \"repo:version\": selectedAsset['repo:vserion'],\n                \"tiff:ImageLength\": selectedAsset['tiff:imageLength'],\n                \"tiff:ImageWidth\": selectedAsset['tiff:imageWidth']\n            },\n            assetMetadata: {}\n        };\n\n        for (prop in selectedAsset._embedded[\"http://ns.adobe.com/adobecloud/rel/metadata/application\"]) {\n            if (!asset.repositoryMetadata.hasOwnProperty(prop)) {\n                asset.assetMetadata[prop] = selectedAsset._embedded[\"http://ns.adobe.com/adobecloud/rel/metadata/application\"][prop];\n            }\n        }\n\n        for (prop in selectedAsset._embedded[\"http://ns.adobe.com/adobecloud/rel/metadata/embedded\"]) {\n            if (!asset.repositoryMetadata.hasOwnProperty(prop)) {\n                asset.assetMetadata[prop] = selectedAsset._embedded[\"http://ns.adobe.com/adobecloud/rel/metadata/embedded\"][prop];\n            }\n        }\n\n        assetSelection.push(asset);\n    });\n\n    let event = new CustomEvent(\"asset-selection\", assetSelection);\n    container.dispatchEvent(event);\n\n    console.log('Selected asset:', assetSelection);\n    onClose();\n};\n\nfunction wrappedEventHandler(event) {\n    console.log('Wrapped asset:', event);\n}\n\nasync function renderAssetSelectorWithImsFlow() {\n\n    const assetSelectorProps = {\n        \"onClose\": onClose,\n        \"handleSelection\": handleSelection,\n        \"imsOrg\": \"523BF0605768FF0E7F000101@AdobeOrg\",\n        \"apiKey\": \"asset_search_services\"\n    }\n\n    const container = document.getElementById('asset-selector');\n\n    PureJSSelectors.renderAssetSelectorWithAuthFlow(container, assetSelectorProps, () => {\n        const assetSelectorDialog = document.getElementById('asset-selector-dialog');\n        assetSelectorDialog.showModal();\n    });\n}\n\nasync function logoutImsFlow() {\n    console.log(\"Signing out...\", imsInstance);\n    await imsInstance.signOut();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n    const container = document.getElementById('asset-selector');\n    container.addEventListener(\"asset-selection\", wrappedEventHandler);\n});"],"names":[],"version":3,"file":"index.51d756ae.js.map","sourceRoot":"/__parcel_source_root/"}