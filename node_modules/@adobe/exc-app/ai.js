"use strict";
/*************************************************************************
 * Copyright 2023 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.AIMessageType = void 0;
const Global_1 = require("./src/Global");
var AIMessageType;
(function (AIMessageType) {
    AIMessageType["CONTEXT"] = "CONTEXT";
    AIMessageType["ERROR"] = "ERROR";
    AIMessageType["OPEN"] = "OPEN";
    AIMessageType["QUERY"] = "QUERY";
    AIMessageType["RESPONSE"] = "RESPONSE";
})(AIMessageType = exports.AIMessageType || (exports.AIMessageType = {}));
const ai = {
    emit: (type, evt) => {
        return (0, Global_1.getImpl)('ai')().emit(type, evt);
    },
    off: (type, handler) => {
        return (0, Global_1.getImpl)('ai')().off(type, handler);
    },
    on: (type, handler) => {
        return (0, Global_1.getImpl)('ai')().on(type, handler);
    },
    onContextRequest: (callback) => {
        return (0, Global_1.getImpl)('ai')().onContextRequest(callback);
    },
    openChat: (query) => {
        return (0, Global_1.getImpl)('ai')().openChat(query);
    },
    sendMessage: (payload) => {
        return (0, Global_1.getImpl)('ai')().sendMessage(payload);
    }
};
Object.defineProperty(ai, 'context', {
    get: () => {
        return (0, Global_1.getImpl)('ai')().context;
    },
    set: (value) => {
        (0, Global_1.getImpl)('ai')().context = value;
    }
});
exports.default = ai;
//# sourceMappingURL=ai.js.map