/*************************************************************************
 * Copyright 2021 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
/* eslint-disable @typescript-eslint/no-var-requires */
const fs = require('fs');
const landingPage = require('../../core/src/services/AppAssemblyConstants/landingPage');
const path = require('path');
const services = require('../../core/src/services/AppAssemblyConstants/services');
const solutions = require('../../core/src/services/AppAssemblyConstants/solutions');
const {version} = require('../package.json');

const versionFilePath = require.resolve(path.join(__dirname, '../version.ts'));
const versionContents = fs.readFileSync(versionFilePath, 'utf8');

try {
  const newVersionContent = versionContents
    .replace(/const EXC_APP_VERSION = (.*)/g,`const EXC_APP_VERSION = '${version}';`);
  if (newVersionContent !== versionContents) {
    fs.writeFileSync(versionFilePath, newVersionContent, 'utf8');
  }
} catch (err) {
  console.log(`Failed to write ${versionFilePath}`, err); // eslint-disable-line no-console
}

// Default IDs to add to the appapi file. This is to keep old versions of ids
// in case they might be used by developers.
const DEFAULT_APP_IDS = {
  ASSETS_ESSENTIALS: 'ddam',
  CUSTOMER_JOURNEY_MANAGEMENT: 'cjm-home',
  LAUNCH_IMPLEMENT: 'implement',
  MARKETO: 'marketo',
  PROJECT_HUMMINGBIRD: 'hummingbird',
  PROJECT_SIERRA: 'cjm-home'
};

function updateName(name) {
  return name.toUpperCase()
    .replace(/[,&]/g, '')
    .split(' ')
    .join('_')
    .replace(/-/g, '_')
    .replace('_/_', '_')
    .replace(/__/g, '_');
}

// Launch has two apps with the name Launch but they have unique appIds
// Some newer apps may have a default name assigned as Adobe Experience Cloud
const commonNames = ['Adobe Experience Cloud', 'Assets', 'Experience Manager', 'Launch'];
const ignoreAppId = ['marketo'];
const ignoreAppIdConcat = ['assets', 'experienceManagerUI'];

// Dynamically generate an enum list of allowed appIds to support the App API
const fixtureList = solutions.concat(services).concat(landingPage);
const ids = new Set(Object.values(fixtureList
  .filter(f => f.appId && !ignoreAppId.includes(f.appId))
  .map(f => {
    const name = commonNames.indexOf(f.name) > -1 && ignoreAppIdConcat.indexOf(f.appId) === -1 ?
      `${f.name}_${f.appId}` :
      f.name;
    return `\n  ${updateName(name)} = '${f.appId}'`;
  })));

// Adds the default IDs on the list.
Object.keys(DEFAULT_APP_IDS).forEach(key => ids.add(`\n  ${key} = '${DEFAULT_APP_IDS[key]}'`));

const appIdsPath = require.resolve(path.join(__dirname, '../appapi.ts'));
const appIdsContents = fs.readFileSync(appIdsPath, 'utf8');
const appIdsNewContents = appIdsContents.replace(
  /export enum AppIds \{.*?\}/s,
  `export enum AppIds {${Array.from(ids).sort()}\n}`);
try {
  fs.writeFileSync(appIdsPath, appIdsNewContents, 'utf8');
} catch (err) {
  console.log(`Failed to write ${appIdsPath}`, err); // eslint-disable-line no-console
}
